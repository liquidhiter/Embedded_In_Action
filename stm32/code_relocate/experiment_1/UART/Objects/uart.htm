<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\uart.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\uart.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6210000: Last Updated: Tue Mar  5 23:29:22 2024
<BR><P>
<H3>Maximum Stack Usage =        144 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
mymain &rArr; put_s_hex &rArr; puthex &rArr; puts &rArr; uart_send
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[0]">mymain</a> from main.o(.text.mymain) referenced from start.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, start.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemInit
</UL>

<P><STRONG><a name="[7]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemInit
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymain
</UL>

<P><STRONG><a name="[3]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[12]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemInit
</UL>

<P><STRONG><a name="[13]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>_memset</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[4]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[14]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[15]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[16]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[17]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[18]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[19]"></a>__rt_memclr_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[6]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[0]"></a>mymain</STRONG> (Thumb, 188 bytes, Stack size 80 bytes, main.o(.text.mymain))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = mymain &rArr; put_s_hex &rArr; puthex &rArr; puts &rArr; uart_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_s_hex
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_receive
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_println
</UL>
<BR>[Address Reference Count : 1]<UL><LI> start.o(.text)
</UL>
<P><STRONG><a name="[a]"></a>put_s_hex</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, mystring.o(.text.put_s_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = put_s_hex &rArr; puthex &rArr; puts &rArr; uart_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puthex
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymain
</UL>

<P><STRONG><a name="[e]"></a>puthex</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, mystring.o(.text.puthex))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = puthex &rArr; puts &rArr; uart_send
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_s_hex
</UL>

<P><STRONG><a name="[d]"></a>puts</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, mystring.o(.text.puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = puts &rArr; uart_send
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puthex
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_s_hex
</UL>

<P><STRONG><a name="[1a]"></a>relocate_memcpy</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, util.o(.text.relocate_memcpy), UNUSED)

<P><STRONG><a name="[1b]"></a>relocate_memset</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, util.o(.text.relocate_memset), UNUSED)

<P><STRONG><a name="[2]"></a>systemInit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, main.o(.text.systemInit), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[b]"></a>uart_get</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, uart.o(.text.uart_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = uart_get
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymain
</UL>

<P><STRONG><a name="[8]"></a>uart_init</STRONG> (Thumb, 112 bytes, Stack size 12 bytes, uart.o(.text.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymain
</UL>

<P><STRONG><a name="[11]"></a>uart_print</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, util.o(.text.uart_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_print &rArr; uart_send
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_receive
</UL>

<P><STRONG><a name="[f]"></a>uart_send</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, uart.o(.text.uart_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puthex
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_println
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[9]"></a>uart_println</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, main.o(.text.uart_println))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_println &rArr; uart_send
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymain
</UL>

<P><STRONG><a name="[c]"></a>uart_receive</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(.text.uart_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uart_receive &rArr; uart_print &rArr; uart_send
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymain
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
